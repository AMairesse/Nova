# Generated by Django 5.2.4 on 2025-07-14 15:22

import django.db.models.deletion
import encrypted_model_fields.fields
import nova.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LLMProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('provider_type', models.CharField(choices=[('openai', 'OpenAI'), ('mistral', 'Mistral'), ('ollama', 'Ollama'), ('lmstudio', 'LMStudio')], default='ollama', max_length=32)),
                ('model', models.CharField(max_length=120)),
                ('api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('base_url', models.URLField(blank=True, null=True)),
                ('additional_config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='llm_providers', to=settings.AUTH_USER_MODEL, verbose_name='LLM providers')),
            ],
            options={
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_threads', to=settings.AUTH_USER_MODEL, verbose_name='User threads')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('actor', models.CharField(choices=[('USR', 'User'), ('AGT', 'Agent')], max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_messages', to=settings.AUTH_USER_MODEL, verbose_name='User messages')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nova.thread')),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField()),
                ('tool_type', models.CharField(choices=[('builtin', 'Builtin'), ('api', 'API HTTP/REST'), ('mcp', 'MCP Server')], default='builtin', max_length=10)),
                ('tool_subtype', models.CharField(blank=True, max_length=50, null=True)),
                ('python_path', models.CharField(blank=True, max_length=255)),
                ('endpoint', models.URLField(blank=True)),
                ('input_schema', models.JSONField(blank=True, default={})),
                ('output_schema', models.JSONField(blank=True, default={})),
                ('available_functions', models.JSONField(blank=True, default=dict, help_text='Available functions for this tool, if any.')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tools', to=settings.AUTH_USER_MODEL, verbose_name='Tools')),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('system_prompt', models.TextField()),
                ('is_tool', models.BooleanField(default=False, help_text='If true, this agent can be used as a tool by other agents.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent_tools', models.ManyToManyField(blank=True, limit_choices_to={'is_tool': True}, related_name='used_by_agents', to='nova.agent', verbose_name='Used by agents')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_agents', to=settings.AUTH_USER_MODEL, verbose_name='User agents')),
                ('llm_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='nova.llmprovider', verbose_name='Agents')),
                ('tools', models.ManyToManyField(blank=True, related_name='agents', to='nova.tool', verbose_name='Agents')),
            ],
            options={
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='UserParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_langfuse', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nova.agent')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ToolCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_type', models.CharField(choices=[('none', 'No Authentication'), ('basic', 'Basic Auth'), ('token', 'Token Auth'), ('oauth', 'OAuth'), ('api_key', 'API Key'), ('custom', 'Custom')], default='basic', max_length=20)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('token', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('token_type', models.CharField(blank=True, max_length=50, null=True)),
                ('client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('client_secret', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('refresh_token', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('access_token', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='nova.tool', verbose_name='Credentials')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_credentials', to=settings.AUTH_USER_MODEL, verbose_name='Tool credentials')),
            ],
            options={
                'unique_together': {('user', 'tool')},
            },
        ),
    ]
